From b28a6364ab68c6b8ea08326c02e01b87f2cebc4e Mon Sep 17 00:00:00 2001
From: GHIFARI160 <ghifari@ghifari160.com>
Date: Sun, 30 Jul 2023 03:20:44 -0500
Subject: [PATCH] Modify ubuntuminimal template

Modify ubuntuminimal template to build Docker images.
---
 images/linux/ubuntuminimal.pkr.hcl | 197 ++++++-----------------------
 1 file changed, 38 insertions(+), 159 deletions(-)

diff --git a/images/linux/ubuntuminimal.pkr.hcl b/images/linux/ubuntuminimal.pkr.hcl
index f81e1a2..18e9441 100644
--- a/images/linux/ubuntuminimal.pkr.hcl
+++ b/images/linux/ubuntuminimal.pkr.hcl
@@ -9,70 +9,9 @@ locals {
   imagedata_file          = "/imagegeneration/imagedata.json"
 }
 
-variable "allowed_inbound_ip_addresses" {
-  type    = list(string)
-  default = []
-}
-
-variable "azure_tags" {
-  type    = map(string)
-  default = {}
-}
-
-variable "build_resource_group_name" {
-  type    = string
-  default = "${env("BUILD_RESOURCE_GROUP_NAME")}"
-}
-
-variable "capture_name_prefix" {
-  type    = string
-  default = "packer"
-}
-
-variable "client_id" {
-  type    = string
-  default = "${env("ARM_CLIENT_ID")}"
-}
-
-variable "client_secret" {
-  type      = string
-  default   = "${env("ARM_CLIENT_SECRET")}"
-  sensitive = true
-}
-
-variable "client_cert_path" {
-  type      = string
-  default   = "${env("ARM_CLIENT_CERT_PATH")}"
-}
-
-variable "commit_url" {
-  type      = string
-  default   = ""
-}
-
 variable "image_version" {
   type    = string
-  default = "dev"
-}
-
-variable "install_password" {
-  type  = string
-  default = ""
-}
-
-variable "location" {
-  type    = string
-  default = "${env("ARM_RESOURCE_LOCATION")}"
-}
-
-variable "private_virtual_network_with_public_ip" {
-  type    = bool
-  default = false
-}
-
-variable "resource_group" {
-  type    = string
-  default = "${env("ARM_RESOURCE_GROUP")}"
+  default = "main"
 }
 
 variable "run_validation_diskspace" {
@@ -80,100 +19,52 @@ variable "run_validation_diskspace" {
   default = false
 }
 
-variable "storage_account" {
-  type    = string
-  default = "${env("ARM_STORAGE_ACCOUNT")}"
-}
-
-variable "subscription_id" {
-  type    = string
-  default = "${env("ARM_SUBSCRIPTION_ID")}"
-}
-
-variable "temp_resource_group_name" {
-  type    = string
-  default = "${env("TEMP_RESOURCE_GROUP_NAME")}"
-}
-
-variable "tenant_id" {
-  type    = string
-  default = "${env("ARM_TENANT_ID")}"
-}
-
-variable "virtual_network_name" {
-  type    = string
-  default = "${env("VNET_NAME")}"
-}
-
-variable "virtual_network_resource_group_name" {
-  type    = string
-  default = "${env("VNET_RESOURCE_GROUP")}"
-}
-
-variable "virtual_network_subnet_name" {
-  type    = string
-  default = "${env("VNET_SUBNET")}"
+source "docker" "ubuntu-2204" {
+  image            = "ubuntu:22.04"
+  discard          = false
+  commit           = true
+  pull             = true
+  privileged       = true
+  fix_upload_owner = true
+  volumes = {
+    "/var/run/docker.sock" : "/var/run/docker.sock"
+  }
+  changes = [
+    "ENTRYPOINT /bin/bash",
+    "LABEL org.opencontainers.image.authors=https://github.com/ghifari160",
+    "LABEL org.opencontainers.image.revision=${var.image_version}",
+    "LABEL org.opencontainers.image.source=https://github.com/ghifari160/runner-images",
+    "LABEL org.opencontainers.image.title=minimal-22.04-amd64",
+    "LABEL org.opencontainers.image.url=https://github.com/ghifari160/runner-images",
+    "LABEL org.opencontainers.image.vendor=ghifari160",
+    "LABEL org.opencontainers.image.version=",
+  ]
 }
 
-variable "vm_size" {
-  type    = string
-  default = "Standard_D4s_v4"
-}
-
-source "azure-arm" "build_vhd" {
-  location = "${var.location}"
-
-  // Auth
-  tenant_id        = "${var.tenant_id}"
-  subscription_id  = "${var.subscription_id}"
-  client_id        = "${var.client_id}"
-  client_secret    = "${var.client_secret}"
-  client_cert_path = "${var.client_cert_path}"
-
-  // Base image
-  image_offer     = "0001-com-ubuntu-server-jammy"
-  image_publisher = "canonical"
-  image_sku       = "22_04-lts"
-
-  // Target location
-  storage_account        = "${var.storage_account}"
-  resource_group_name    = "${var.resource_group}"
-  capture_container_name = "images"
-  capture_name_prefix    = "${var.capture_name_prefix}"
-
-  // Resource group for VM
-  build_resource_group_name = "${var.build_resource_group_name}"
-  temp_resource_group_name  = "${var.temp_resource_group_name}"
+build {
+  sources = ["source.docker.ubuntu-2204"]
 
-  // Networking for VM
-  private_virtual_network_with_public_ip = "${var.private_virtual_network_with_public_ip}"
-  virtual_network_resource_group_name    = "${var.virtual_network_resource_group_name}"
-  virtual_network_name                   = "${var.virtual_network_name}"
-  virtual_network_subnet_name            = "${var.virtual_network_subnet_name}"
-  allowed_inbound_ip_addresses           = "${var.allowed_inbound_ip_addresses}"
-  
-  // VM Configuration
-  vm_size         = "${var.vm_size}"
-  os_disk_size_gb = "86"
-  os_type         = "Linux"
-  
-  dynamic "azure_tag" {
-    for_each = var.azure_tags
-    content {
-      name = azure_tag.key
-      value = azure_tag.value
-    }
+  post-processor "docker-tag" {
+    repository = "ghifari160/ubuntu"
+    tags = [
+      "minimal-22.04",
+      "minimal-latest",
+    ]
   }
-}
 
-build {
-  sources = ["source.azure-arm.build_vhd"]
+  provisioner "shell" {
+    inline = [
+      "dpkg-reconfigure debconf --frontend=noninteractive",
+      "apt-get -yq update",
+      "apt-get -yq install lsb-release sudo rsync wget apt-utils"
+    ]
+  }
 
   // Create folder to store temporary data
   provisioner "shell" {
     execute_command = "sudo sh -c '{{ .Vars }} {{ .Path }}'"
-    inline          = ["mkdir ${local.image_folder}",
-                       "chmod 777 ${local.image_folder}"]
+    inline = ["mkdir -p ${local.image_folder}",
+    "chmod 777 ${local.image_folder}"]
   }
 
   // Add apt wrapper to implement retries
@@ -267,12 +158,6 @@ build {
     ]
   }
 
-  provisioner "shell" {
-    execute_command   = "/bin/sh -c '{{ .Vars }} {{ .Path }}'"
-    expect_disconnect = true
-    scripts           = ["${path.root}/scripts/base/reboot.sh"]
-  }
-
   provisioner "shell" {
     execute_command     = "sudo sh -c '{{ .Vars }} {{ .Path }}'"
     pause_before        = "1m0s"
@@ -295,10 +180,4 @@ build {
     environment_vars = ["RUN_VALIDATION=${var.run_validation_diskspace}"]
     scripts          = ["${path.root}/scripts/installers/validate-disk-space.sh"]
   }
-
-  provisioner "shell" {
-    execute_command = "sudo sh -c '{{ .Vars }} {{ .Path }}'"
-    inline          = ["sleep 30", "/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync"]
-  }
-
 }
-- 
2.41.0

